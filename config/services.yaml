imports:
    - { resource: ../repos.yaml }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Linkorb\MultiRepo\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Linkorb\MultiRepo\Services\Io\IoInterface: '@Linkorb\MultiRepo\Services\Io\UnixIo'

    Linkorb\MultiRepo\Factory\MiddlewareFactoryPool:
        calls:
            - [addToPool, ['githubWorkflows', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createGithubActionsFactory'], arguments: ['@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper', '@twig', '@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper'] }]]
            - [addToPool, ['qaChecks', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createQaFactory'], arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'] }]]
            - [addToPool, ['circleci', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createCircleCiFactory'], arguments: ['@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper', '@twig', '@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper'] }]]
            - [addToPool, ['json', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createJsonFactory'], arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface'] }]]
            - [addToPool, ['yaml', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createYamlFactory'], arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface'] }]]
            - [addToPool, ['composerVersionConstraint', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createComposerJsonVersionConstraint'], arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'] }]]
            - [addToPool, ['composerDependencyBlacklist', !service { factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createComposerJsonDependencyBlacklist'], arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'] }]]

    Linkorb\MultiRepo\Handler\RepositoryHandler:
        arguments:
            $repositoriesBasePath: '%kernel.project_dir%/repositories'

    Linkorb\MultiRepo\Handler\MultiRepositoryHandler:
        arguments:
            $config: '%repos%'

    Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper:
        arguments:
            $templatesDir: '%kernel.project_dir%/templates/dockerfile'
